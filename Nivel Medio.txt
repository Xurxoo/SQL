14)
SELECT
	m.MOVIE_NAME,
	s.STUDIO_NAME
FROM
	PUBLIC.MOVIES m
INNER JOIN PUBLIC.STUDIOS s ON
	m.STUDIO_ID = s.STUDIO_ID
	
15)
SELECT
	DISTINCT me.MEMBER_NAME AS "Nombre del socio"
FROM
	PUBLIC.MEMBERS me
INNER JOIN PUBLIC.MEMBERS_MOVIE_RENTAL mmr ON
	me.MEMBER_ID = mmr.MEMBER_ID
WHERE
	YEAR(mmr.MEMBER_RENTAL_DATE) >= 2010
	AND YEAR (mmr.MEMBER_RENTAL_DATE) <= 2015;

SELECT
	DISTINCT me.MEMBER_NAME AS "Nombre del socio"
FROM
	PUBLIC.MEMBERS me
INNER JOIN PUBLIC.MEMBERS_MOVIE_RENTAL mmr ON
	me.MEMBER_ID = mmr.MEMBER_ID
WHERE
	YEAR(mmr.MEMBER_RENTAL_DATE)BETWEEN 2010 AND 2015;
	
16)
SELECT
	m.NATIONALITY_ID,
	COUNT(m.MOVIE_ID),
	n.NATIONALITY_NAME
FROM
	PUBLIC.MOVIES m
INNER JOIN PUBLIC.NATIONALITIES n ON
	m.NATIONALITY_ID = n.NATIONALITY_ID
GROUP BY
	m.NATIONALITY_ID,
	n.NATIONALITY_NAME
ORDER BY
	m.NATIONALITY_ID ASC;
	
17)
SELECT
	m.MOVIE_NAME,
	g.GENRE_NAME
FROM
	PUBLIC.MOVIES m
INNER JOIN PUBLIC.GENRES g ON
	m.GENRE_ID = g.GENRE_ID
WHERE
	g.GENRE_ID = 2;
	
18)
SELECT
	m.MOVIE_NAME,
	d.DIRECTOR_NAME,
	DATEDIFF(YEAR, d.DIRECTOR_BIRTH_DATE, TODAY()) AS "Edad"
FROM
	PUBLIC.MOVIES m
INNER JOIN PUBLIC.DIRECTORS d ON
	m.DIRECTOR_ID = d.DIRECTOR_ID
WHERE
	YEAR (d.DIRECTOR_BIRTH_DATE) >= 1980
	AND d.DIRECTOR_DEAD_DATE IS NULL
ORDER BY
	d.DIRECTOR_ID;
	
19) --Not sure at all
SELECT
	m2.MEMBER_NAME,
	d.DIRECTOR_NAME,
	d.DIRECTOR_BIRTH_PLACE
FROM
	PUBLIC.PUBLIC.DIRECTORS d
INNER JOIN PUBLIC.PUBLIC.MOVIES m ON
	d.DIRECTOR_ID = m.DIRECTOR_ID
INNER JOIN PUBLIC.PUBLIC.MEMBERS_MOVIE_RENTAL mmr ON
	m.MOVIE_ID = mmr.MOVIE_ID
INNER JOIN PUBLIC.PUBLIC.MEMBERS m2 ON
	mmr.MEMBER_ID = m2.MEMBER_ID
WHERE
	d.DIRECTOR_BIRTH_PLACE = m2.MEMBER_TOWN;

SELECT
	me.MEMBER_TOWN
FROM
	PUBLIC.MEMBERS me
INNER JOIN PUBLIC.DIRECTORS d ON
	me.MEMBER_TOWN = d.DIRECTOR_BIRTH_PLACE;
	
20)
SELECT
	m.MOVIE_NAME AS "Nombre de la pelicula",
	YEAR (m.MOVIE_LAUNCH_DATE) AS "AÃ±o de lanzamiento",
	S.STUDIO_NAME AS "Nombre del estudio"
FROM
	PUBLIC.MOVIES m
INNER JOIN PUBLIC.STUDIOS s ON
	m.STUDIO_ID = s.STUDIO_ID
WHERE
	s.STUDIO_ACTIVE = FALSE
ORDER BY
	s.STUDIO_NAME;
	
21)
	m.MOVIE_NAME,
	mmr.MEMBER_RENTAL_DATE
FROM
	PUBLIC.MOVIES m
INNER JOIN PUBLIC.MEMBERS_MOVIE_RENTAL mmr ON
	m.MOVIE_ID = mmr.MOVIE_ID
ORDER BY
	mmr.MEMBER_RENTAL_DATE DESC
LIMIT 10;

22)
SELECT
	COUNT(MOVIE_ID),
	d.DIRECTOR_NAME
FROM
	PUBLIC.MOVIES m
INNER JOIN PUBLIC.DIRECTORS d ON
	m.DIRECTOR_ID = d.DIRECTOR_ID
WHERE
	DATEDIFF(YEAR, d.DIRECTOR_BIRTH_DATE, m.MOVIE_LAUNCH_DATE) < 41
GROUP BY
	d.DIRECTOR_ID;
	
23)
SELECT
	AVG(m.MOVIE_DURATION),
	m.DIRECTOR_ID
FROM
	PUBLIC.MOVIES m
GROUP BY
	m.DIRECTOR_ID
ORDER BY
	m.DIRECTOR_ID;
	
24)
SELECT
	m.MOVIE_NAME,
	m.MOVIE_DURATION
FROM
	PUBLIC.MOVIES m
INNER JOIN PUBLIC.MEMBERS_MOVIE_RENTAL mmr ON
	m.MOVIE_ID = mmr.MOVIE_ID
WHERE
	YEAR (mmr.MEMBER_RENTAL_DATE) BETWEEN 2017 AND 2020
ORDER BY
	m.MOVIE_DURATION ASC
LIMIT 1;

25)
SELECT
	COUNT (m.MOVIE_ID),
	d.DIRECTOR_NAME
FROM
	PUBLIC.MOVIES m
INNER JOIN PUBLIC.DIRECTORS d ON
	m.DIRECTOR_ID = d.DIRECTOR_ID
WHERE
	m.MOVIE_LAUNCH_DATE >= DATE '1960-01-01'
	AND m.MOVIE_LAUNCH_DATE < DATE '1989-12-31'
	AND ((m.MOVIE_NAME LIKE 'The %')
		OR (m.MOVIE_NAME LIKE '% The %')
			OR (m.MOVIE_NAME LIKE '% The'))
GROUP BY
	d.DIRECTOR_NAME,
	m.MOVIE_NAME;